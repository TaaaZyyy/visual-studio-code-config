{
  "console.log": {
    "prefix": "sysout",
    "body": ["console.log($1);$2"],
    "description": "console.log"
  },


  "console.log_JSON": {
    "prefix": ["sysoutj","sysoutobj"],
    "body": ["console.log(JSON.stringify($1));$2"],
    "description": "console.log obj->JSON"
  },

// =================
//  Auraコンポーネント
// =================
  "aura apexアクション": {
    "prefix": ["action","apex"],
    "body": [
      "let action = component.get(\"c.${1:ApexMethodName}\");",
      "action.setParams({",
      "    \"${1:ApexMethodParameter}\": contId,",
      "});",
      "",
      "action.setCallback(this, response => {",
      "    let state = response.getState();",
      "    if (state === \"SUCCESS\") {",
      "        console.log(response.getReturnValue());",
      "",
      "    } else if (state === \"ERROR\") {",
      "        console.log`error: ${JSON.stringify(response.getError())}`;",
      "    }",
      "});",
      "$$A.enqueueAction(action);"
    ],
    "description": "lightning component apex action"
  },


  "aura トーストメッセージ": {
    "prefix": "msg",
    "body": [
      "dispMsg : function(message, type, data) {",
      "  if (!message) { return; }",
      "  let toastEvent = $A.get(\"e.force:showToast\");",
      "  toastEvent.setParams({",
      "    \"message\": message,",
      "    \"messageTemplate\": message,  //'Record {0} created! See it {1}!',",
      "    \"messageTemplateData\": data, // ['Salesforce', {url: 'http://www.salesforce.com/',label: 'here',}],",
      "    \"type\": type,                // 'success'",
      "  });",
      "  toastEvent.fire();",
      "},"
    ],
    "description": "lightning component toastEvent"
  },


  "aura エラートーストメッセージ": {
    "prefix": ["err","error","errmsg","errormessage"],
    "body": [
      "handleActionError : function(response) {",
      "  let errors = response.getError();",
      "  console.log`error: ${JSON.stringify(errors)}`;",
      "",
      "  let msg   = '';",
      "  if (errors[0].message !== void 0) {",
      "    msg = errors[0].message;",
      "  } else if ((errors[0].pageErrors[0] !== void 0) && (errors[0].pageErrors[0].message !== void 0)) {",
      "    msg = errors[0].pageErrors[0].message;",
      "  } else if (errors[0].fieldErrors !== void 0) {",
      "    msg = Object.keys(errors[0].fieldErrors).map( key => errors[0].fieldErrors[key][0].message)[0];",
      "  }",
      "",
      "  this.dispMsg(`エラーが発生しました : ${msg}`, \"error\");",
      "},"
    ],
    "description": "lightning component action error toastEvent"
  },


  "aura jsコントローラメソッド": {
    "prefix": "func",
    "body": [
      "function(component, event, helper) {$1},"
    ],
    "description": "sf-component controller create function"
  },

  "aura navi": {
    "prefix": "navi",
    "body": [
      "console.log(event);",
      "let recordId = event.srcElement.getAttribute(\"data-userid\");",
      "// let recordId = event.getSource().get(\"data-userid\");",
      "// let recordId = event.currentTarget.getAttribute(\"data-userid\");",
      "let navEvent = $A.get(\"e.force:navigateToSObject\");",
      "navEvent.setParams({\"recordId\": recordId});",
      "navEvent.fire();"
    ],
    "description": "リダイレクトリンク"
  },

  "aura component.get": {
    "prefix": ["get"],
    "body": ["component.get(\"v.変数\")"],
    "description": "コントローラでattributeの値を使用する"
  },

  "aura save": {
    "prefix": ["save"],
    "body": [
      "let lds = component.find(\"service\");",
      "lds.saveRecord(saveResult => {",
      "    console.log(saveResult.state);",
      "    if (saveResult.state === \"SUCCESS\" || saveResult.state === \"DRAFT\") {",
      "        let toastEvent = $A.get(\"e.force:showToast\");",
      "        // メッセージの表示",
      "        if (toastEvent) {",
      "            toastEvent.setParams({",
      "                \"title\": \"Success\",",
      "                \"type\": \"success\",",
      "                \"message\": \"Boat Review Created\"",
      "            });",
      "            toastEvent.fire();",
      "        } else {",
      "            window.alert(\"Boat Review Created\");",
      "        }",
      "        // 保存後処理",
      "        let cmpEvent = component.getEvent(\"boatreviewadded\");",
      "        cmpEvent.fire();",
      "    } else if (saveResult.state === \"INCOMPLETE\") {",
      "        console.log(\"User is offline, device doesn't support drafts.\");",
      "    } else if (saveResult.state === \"ERROR\") {",
      "        console.log('Problem saving record, error: ' + JSON.stringify(saveResult.error));",
      "    } else {",
      "        console.log('Unknown problem, state: ' + saveResult.state + ', error: ' + JSON.stringify(saveResult.error));",
      "    }",
      "});"
    ],
    "description": "recordDataの保存後の処理"
  },

// =================
//  LWC
// =================
  "snipet_name": {
    "prefix": ["card"],
    "body": ["<lightning-card title=\"${1:titel}\" icon-name=\"${2:custom:custom53}\">"],
    "description": ""
  },
}
